{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"See this magic:","text":"<p>               Bases: <code>BaseModel</code></p> <p>This is the sales class of the database. It contains the following attributes:</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>EmailStr</code> <p>The email of the seller</p> required <code>date_hour</code> <code>datetime</code> <p>The date and hour of the sale</p> required <code>cost</code> <code>PositiveFloat</code> <p>The cost of the sale</p> required <code>quantity</code> <code>PositiveInt</code> <p>The quantity of the sale</p> required <code>product</code> <code>ProductEnum</code> <p>The product of the sale</p> required Source code in <code>contract.py</code> <pre><code>class Sales(BaseModel):\n  \"\"\"\n  This is the sales class of the database. It contains the following attributes:\n\n  Args:\n      email (EmailStr): The email of the seller\n      date_hour (datetime): The date and hour of the sale\n      cost (PositiveFloat): The cost of the sale\n      quantity (PositiveInt): The quantity of the sale\n      product (ProductEnum): The product of the sale\n  \"\"\"\n\n  email: EmailStr\n  date_hour: datetime\n  cost: PositiveFloat\n  quantity: PositiveInt\n  product: ProductEnum\n</code></pre> <p>This is the function to connect to database. It saves the sale in the database.</p> Source code in <code>database.py</code> <pre><code>def save_at_postgres(data: Sales):\n  \"\"\"\n  This is the function to connect to database. It saves the sale in the database.\n  \"\"\"\n  try:\n    conn = psycopg2.connect(\n      dbname=DB_NAME,\n      user=DB_USER,\n      password=DB_PASS,\n      host=DB_HOST\n    )\n    cursor = conn.cursor()\n    cursor.execute(\n      sql.SQL(\"INSERT INTO sales (email, date_hour, cost, quantity, product) VALUES (%s, %s, %s, %s, %s)\"),\n      (data.email, data.date_hour, data.cost, data.quantity, data.product)\n    )\n    conn.commit()\n    cursor.close()\n    conn.close()\n    st.success('Sale saved successfully!')\n  except Exception as e:\n    st.error(f\"Ops! Something went wrong. Please check the following: {e}\")\n</code></pre>"}]}